@model Progno.Web.Areas.Admin.ViewModel.ProductViewModel

@{
    ViewBag.Title = "AddProduct";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
<script>
    function hidecat() {
        $("#newcat").hide();

    }
    function show(input) {

        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                $('#user_img').attr('src', e.target.result);
            }
            filerdr.readAsDataURL(input.files[0]);
        }
    }

    function category() {
        $("#existingcat").hide();
        $("#newcat").show();
        $("#catbutton").hide();
        $("#existingcatbutton").show();
        $("#exist").empty();

    }
    function excategory() {
        $("#newcat").hide();
        $("#catbutton").show();
        $("#existingcatbutton").hide();
        $("#existingcat").show();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("LoadCategory", "Product")',
            dataType: 'json',
            data: { id: $("#exist").val() },
            success: function (values) {
                $("#exist").append('<option value="' + '""' + '">' +
                    '-- Select --' + '</option>');
                $.each(values, function (i, values) {
                    $("#exist").append('<option value="' + values.Value + '">' +
                        values.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve dropdown' + ex);
            }
        });
    }
</script>

<div class="row"  >
    @using (Html.BeginForm("AddProduct", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="col-md-10 col-md-offset-1 ">
            <div class="panel panel-info">
                <div class="panel-heading h2">Create Product</div>
                <div class="panel-body">
                    @if (TempData["Message"] != null)
                    {
                        @Html.Partial("_Message", (Progno.Model.Model.Message)TempData["Message"])
                    }
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="col-md-12 control-label">@Html.LabelFor(model => model.Product.Name)</label>
                                <div class="col-md-12">
                                    <div class="input-group">
                                        @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control col-md-12", @required = "required", } })
                                        @Html.ValidationMessageFor(model => model.Product.Name, null, new { @class = "text-danger" })
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="col-md-12 control-label">@Html.LabelFor(model => model.Product.Description)</label>
                                <div class="col-md-12">
                                    <div class="input-group">
                                        @Html.EditorFor(model => model.Product.Description, new { htmlAttributes = new { @class = "",@rows =3, @placeholder = "Description" } })
                                        @Html.ValidationMessageFor(model => model.Product.Description, null, new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                   
                    <div class="row">
                        <div  class="col-md-6">
                            <div id="existingcat" class="form-group">
                                <label class="col-md-12 control-label">@Html.LabelFor(model => model.Product.Category)</label>
                                <div class="col-md-12">
                                    <div class="input-group">
                                        @Html.DropDownListFor(f => f.Product.Category.Id, (IEnumerable<SelectListItem>)ViewBag.ProductCategory, new { @class = "form-control ", @id = "exist", })
                                        @Html.ValidationMessageFor(model => model.Product.Category, null, new { @class = "text-danger" })
                                    </div>

                                </div>
                            </div>
                            <div id="newcat" style="display: none;" class="form-group">
                                <label class="col-md-12 control-label">@Html.LabelFor(model => model.ProductCategory, "Category Name")</label>
                                <div class="col-md-12">
                                    <div class="input-group">
                                        @Html.EditorFor(model => model.ProductCategory.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Category Name", @id = "new" } })
                                        <p class="help-block text-danger"></p>
                                    </div>
                                </div>
                            </div>
                            <p id="catbutton" onclick="category()" class="btn btn-sm btn-success">New Category</p>
                            <p style="display: none;" id="existingcatbutton" onclick="excategory()" class="btn btn-sm btn-info">existing Category</p>

                        </div>
                      
                        
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="col-md-12 control-label">@Html.LabelFor(model => model.Product.ReOrderQty)</label>
                                <div class="col-md-12">
                                    <div class="input-group">
                                        @Html.EditorFor(model => model.Product.ReOrderQty, new { htmlAttributes = new { @class = "form-control", @placeholder = "Re-Order Quantity", @required = "required" } })
                                        <p class="help-block text-danger"></p>
                                    </div>
                                </div>
                            </div>
                        </div>


                      

                    </div>
                    <br />
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="col-md-3 control-label">Product Image</label>
                                <div class="col-md-9">
                                    <div class="input-group">
                                        <input type="file" title="Upload Image" id="file" name="file" onchange="show(this)" class="form-control" />
                                        <img id="user_img" height="100" width="100" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="col-md-3 control-label">@Html.LabelFor(model => model.Product.BarCode, "Barcode")</label>
                                <div class="col-md-9">
                                    <div class="input-group">
                                        <span class="input-group-addon"><span class="fa fa-pencil"></span></span>
                                        @Html.EditorFor(model => model.Product.BarCode, new { htmlAttributes = new { @class = "form-control" } })
                                        <p class="help-block text-danger"></p>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                    <br />
                </div>
                <div class="panel-footer">
                    <button type="submit" class="btn btn-primary">
                        <i class="fa fa-save"></i>
                        Submit
                    </button>
                </div>

            </div>
        </div>
    }
</div>
